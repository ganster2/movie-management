# Generated by Django 4.2.3 on 2023-08-01 17:38

import autoslug.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=255)),
                ('slug', autoslug.fields.AutoSlugField(editable=False, populate_from='name')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=255)),
                ('avatar', models.ImageField(upload_to='actor')),
                ('gender', models.CharField(choices=[('MALE', 'Male'), ('FEMALE', 'Female')], max_length=10)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Actor',
            fields=[
                ('person_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='movies.person')),
                ('role', models.CharField(choices=[('ACTOR', 'Actor'), ('DIRECTOR', 'Director')], max_length=20)),
            ],
            options={
                'abstract': False,
            },
            bases=('movies.person',),
        ),
        migrations.CreateModel(
            name='Director',
            fields=[
                ('person_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='movies.person')),
                ('role', models.CharField(choices=[('ACTOR', 'Actor'), ('DIRECTOR', 'Director')], max_length=20)),
            ],
            options={
                'abstract': False,
            },
            bases=('movies.person',),
        ),
        migrations.CreateModel(
            name='SubCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=255)),
                ('slug', autoslug.fields.AutoSlugField(editable=False, populate_from='name')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subcategory', to='movies.category')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Movie',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=255)),
                ('slug', autoslug.fields.AutoSlugField(editable=False, populate_from='name')),
                ('thumbnail', models.ImageField(upload_to='thumbnail')),
                ('movie_url', models.URLField()),
                ('movie_type', models.CharField(choices=[('MOVIE', 'Movie'), ('TVSERIES', 'TV Series'), ('WEBSERIES', 'Web Series')], default='MOVIE', max_length=30)),
                ('category', models.ManyToManyField(to='movies.category')),
                ('subcategory', models.ManyToManyField(blank=True, to='movies.subcategory')),
                ('actor', models.ManyToManyField(to='movies.actor')),
                ('director', models.ManyToManyField(to='movies.director')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
